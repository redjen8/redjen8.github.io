<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - Redjen TIL</title>
        <link>http://redjen8.github.io/posts/</link>
        <description>All Posts | Redjen TIL</description>
        <generator>Hugo -- gohugo.io</generator><language>ko-KR</language><lastBuildDate>Thu, 02 Mar 2023 19:42:53 &#43;0900</lastBuildDate><atom:link href="http://redjen8.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Javascript Generator에 대해</title>
    <link>http://redjen8.github.io/posts/mar2023/javascript-generator%EC%97%90-%EB%8C%80%ED%95%B4/</link>
    <pubDate>Thu, 02 Mar 2023 19:42:53 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/mar2023/javascript-generator%EC%97%90-%EB%8C%80%ED%95%B4/</guid>
    <description><![CDATA[반복자 (iterator) 패턴이란 https://refactoring.guru/ko/design-patterns/iterator 어플리케이션 전체에서 어떤 도메인 모델의 순회가 일어나는 경우 코드의 중복을 줄일 수 있는 디자인 패턴 코드가 다른 데이터 구조들을 순회하길 원할]]></description>
</item>
<item>
    <title>Airflow 아키텍쳐</title>
    <link>http://redjen8.github.io/posts/mar2023/airflow-%EC%95%84%ED%82%A4%ED%85%8D%EC%B3%90/</link>
    <pubDate>Wed, 01 Mar 2023 20:42:04 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/mar2023/airflow-%EC%95%84%ED%82%A4%ED%85%8D%EC%B3%90/</guid>
    <description><![CDATA[Airflow란 Apache에서 만든 workflow를 빌드하고 실행할 수 있는 플랫폼이다. https://airflow.apache.org/docs/apache-airflow/stable/core-concepts/overview.html 각각의 workflow들은 DAG(Directed Acyclic Graph, 유향 비순환 그래프)로]]></description>
</item>
<item>
    <title>Jdk Proxy vs Cglib Proxy</title>
    <link>http://redjen8.github.io/posts/feb2023/jdk-proxy-vs-cglib-proxy/</link>
    <pubDate>Tue, 28 Feb 2023 19:02:20 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/feb2023/jdk-proxy-vs-cglib-proxy/</guid>
    <description><![CDATA[스프링 프레임워크는 AOP의 장점을 아주 잘 활용하고 있는 프레임워크이다. AOP에 의해 생성된 객체는 Aspect Contract를 실행하기 위해 사용된다. 스프링에]]></description>
</item>
<item>
    <title>Java Tuple, Reactor의 Tuples</title>
    <link>http://redjen8.github.io/posts/feb2023/java-tuple-reactor%EC%9D%98-tuples/</link>
    <pubDate>Mon, 27 Feb 2023 21:51:31 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/feb2023/java-tuple-reactor%EC%9D%98-tuples/</guid>
    <description><![CDATA[2개의 데이터를 가지는 원소를 묶어서 하나의 변수 인스턴스로 나타내고 싶을 경우가 있다. 대표적인 예시로는 2차원 상의 좌표를 나타내는 예시가 있을 것이다. 좌표를]]></description>
</item>
<item>
    <title>React Dom Mount</title>
    <link>http://redjen8.github.io/posts/feb2023/react-dom-mount/</link>
    <pubDate>Sun, 26 Feb 2023 19:18:46 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/feb2023/react-dom-mount/</guid>
    <description><![CDATA[저번에는 리액트의 useState와 useEffect 훅에 대해 알아봤었다. 그런데, 리액트에서 &lsquo;마운트&rsquo;한다는 것은 어떤 의미인지 정확히 모르]]></description>
</item>
<item>
    <title>React UseState와 UseEffect</title>
    <link>http://redjen8.github.io/posts/feb2023/react-usestate%EC%99%80-useeffect/</link>
    <pubDate>Sat, 25 Feb 2023 16:55:12 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/feb2023/react-usestate%EC%99%80-useeffect/</guid>
    <description><![CDATA[난 리액트를 모른다. 리액트를 사용해서 뭔가를 만들어 본 적도 없지만 리액트로 짜여진 코드는 커뮤니티 등에서 아주 쉽게 찾아볼 수 있었기 때문에 - 관심은 가지고 있는 상]]></description>
</item>
<item>
    <title>Javascript의 객체 복사</title>
    <link>http://redjen8.github.io/posts/feb2023/javascript%EC%9D%98-%EA%B0%9D%EC%B2%B4-%EB%B3%B5%EC%82%AC/</link>
    <pubDate>Fri, 24 Feb 2023 17:58:09 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/feb2023/javascript%EC%9D%98-%EA%B0%9D%EC%B2%B4-%EB%B3%B5%EC%82%AC/</guid>
    <description><![CDATA[얕은 복사 / 깊은 복사 개념은 아니까 패스~ 어떻게 복사하는 게 좋을까? 하던 중 잘 정리된 글이 있어서.. https://www.daleseo.com/js-objects-clone/ 얕은 복사 Object.assign() Object.assign()을 사용하면]]></description>
</item>
<item>
    <title>앵귤러 View Child</title>
    <link>http://redjen8.github.io/posts/feb2023/%EC%95%B5%EA%B7%A4%EB%9F%AC-view-child/</link>
    <pubDate>Thu, 23 Feb 2023 17:41:49 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/feb2023/%EC%95%B5%EA%B7%A4%EB%9F%AC-view-child/</guid>
    <description><![CDATA[프론트엔드 작업을 하면서 가장 고민이 많이 되고 어렵지만 또 재미있는 개발은 컴포넌트 공통화인 것 같다. 동일한 코드를 재사용하지 않고 나이스한 방법으로 컴포넌트가]]></description>
</item>
<item>
    <title>Post Compile Weaving</title>
    <link>http://redjen8.github.io/posts/feb2023/post-compile-weaving/</link>
    <pubDate>Wed, 22 Feb 2023 23:08:49 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/feb2023/post-compile-weaving/</guid>
    <description><![CDATA[AOP란 AOP는 교차 관심사의 분리를 허용함으로써 프로그램의 모듈성을 높이는 것을 목표로 하는 프로그래밍 패러다임이다. AOP가 사용되는 대표적인 예시는,]]></description>
</item>
<item>
    <title>스프링 리액티브 트랜잭션</title>
    <link>http://redjen8.github.io/posts/feb2023/%EC%8A%A4%ED%94%84%EB%A7%81-%EB%A6%AC%EC%95%A1%ED%8B%B0%EB%B8%8C-%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98/</link>
    <pubDate>Tue, 21 Feb 2023 19:56:04 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/feb2023/%EC%8A%A4%ED%94%84%EB%A7%81-%EB%A6%AC%EC%95%A1%ED%8B%B0%EB%B8%8C-%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98/</guid>
    <description><![CDATA[리액티브 컨텍스트 안에서 트랜잭션은 어떻게 이루어질까? https://spring.io/blog/2019/05/16/reactive-transactions-with-spring 선언적 트랜잭션 관리는 어떻게 이루어지나 트랜잭션 관리는 트랜잭션의 상태를 실행과 연관지어야 한다.]]></description>
</item>
</channel>
</rss>
