<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - Redjen TIL</title>
        <link>http://redjen8.github.io/posts/</link>
        <description>All Posts | Redjen TIL</description>
        <generator>Hugo -- gohugo.io</generator><language>ko-KR</language><lastBuildDate>Tue, 24 Jan 2023 20:00:40 &#43;0900</lastBuildDate><atom:link href="http://redjen8.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Spring Lazy Initialization</title>
    <link>http://redjen8.github.io/posts/jan2023/spring-lazy-initialization/</link>
    <pubDate>Tue, 24 Jan 2023 20:00:40 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/jan2023/spring-lazy-initialization/</guid>
    <description><![CDATA[Spring boot 2에서는 Spring bean에 Lazy Initialization을 적용할 수 있도록 지원한다. Lazy initialization이 무엇인지, 어떨 때 사용해야 하는]]></description>
</item>
<item>
    <title>Java Optional의 메소드</title>
    <link>http://redjen8.github.io/posts/jan2023/java-optional%EC%9D%98-%EB%A9%94%EC%86%8C%EB%93%9C/</link>
    <pubDate>Mon, 23 Jan 2023 20:47:33 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/jan2023/java-optional%EC%9D%98-%EB%A9%94%EC%86%8C%EB%93%9C/</guid>
    <description><![CDATA[Java 8부터 Java를 null safe하게 사용할 수 있게 해주는 Optional의 메소드에 대해 정리해봤다. https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html 객체를 Optional로 래핑 of와 ofNull]]></description>
</item>
<item>
    <title>Mongodb State Should Be Open 트러블슈팅</title>
    <link>http://redjen8.github.io/posts/jan2023/mongodb-state-should-be-open-%ED%8A%B8%EB%9F%AC%EB%B8%94%EC%8A%88%ED%8C%85/</link>
    <pubDate>Sun, 22 Jan 2023 22:14:22 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/jan2023/mongodb-state-should-be-open-%ED%8A%B8%EB%9F%AC%EB%B8%94%EC%8A%88%ED%8C%85/</guid>
    <description><![CDATA[개발 중 JUnit 기반 테스트를 돌리는데 다음과 같은 에러를 마주쳤다. java.lang.IllegalStateException: state should be: open 찾아보다가 좀 허무하게 해결했던 경험이지만 원인을 해결한 과정을 써보려 한다. 원인 원인]]></description>
</item>
<item>
    <title>Javascript의 This (2)</title>
    <link>http://redjen8.github.io/posts/jan2023/javascript%EC%9D%98-this-2/</link>
    <pubDate>Sat, 21 Jan 2023 16:49:14 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/jan2023/javascript%EC%9D%98-this-2/</guid>
    <description><![CDATA[생성자에서의 this 함수가 new 키워드를 통해서 생성자로 사용될 때, this는 새로 생성되는 객체를 가르킨다. 이 때, 생성자 함수가 접근하는 객체가 어떤 객체인지는 상]]></description>
</item>
<item>
    <title>Javascript의 This (1)</title>
    <link>http://redjen8.github.io/posts/jan2023/javascript%EC%9D%98-this-1/</link>
    <pubDate>Fri, 20 Jan 2023 16:56:13 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/jan2023/javascript%EC%9D%98-this-1/</guid>
    <description><![CDATA[Javascript에서 this 키워드는 다른 언어와 달리 호출한 위치에 따라서 가르키는 대상이 달라진다. 스크립트가 실행 중일 때에는 할당해서 설정할 수 없고, 호출]]></description>
</item>
<item>
    <title>Webflux Scheduler의 종류</title>
    <link>http://redjen8.github.io/posts/jan2023/webflux-scheduler%EC%9D%98-%EC%A2%85%EB%A5%98/</link>
    <pubDate>Thu, 19 Jan 2023 19:24:44 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/jan2023/webflux-scheduler%EC%9D%98-%EC%A2%85%EB%A5%98/</guid>
    <description><![CDATA[Webflux에서는 parallel() 기능을 통해 Flux 등을 ParallelFlux 로 변환하여 쓰레드 간 병렬적으로 작업을 할 수 있도록 지원한다. runOn(someScheduler)는 어떤]]></description>
</item>
<item>
    <title>Javascript의 메모리 구조</title>
    <link>http://redjen8.github.io/posts/jan2023/javascript%EC%9D%98-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B5%AC%EC%A1%B0/</link>
    <pubDate>Wed, 18 Jan 2023 22:30:23 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/jan2023/javascript%EC%9D%98-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B5%AC%EC%A1%B0/</guid>
    <description><![CDATA[개요 자바스크립트도 자바와 같이 가비지 컬렉션을 지원하는 언어이다. 자동으로 메모리를 관리해준다는 점이 편하긴 하지만 잘못 알고 사용하게 된다면 메모리 leak]]></description>
</item>
<item>
    <title>Mockito의 Mock, Mockbean 어노테이션의 차이</title>
    <link>http://redjen8.github.io/posts/jan2023/mockito-mock-mockbean-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98%EC%9D%98-%EC%B0%A8%EC%9D%B4/</link>
    <pubDate>Tue, 17 Jan 2023 22:09:25 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/jan2023/mockito-mock-mockbean-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98%EC%9D%98-%EC%B0%A8%EC%9D%B4/</guid>
    <description><![CDATA[junit 테스트 수행 도중 @MockBean 어노테이션이 없어서 테스트에 필요한 서비스 의존성 주입에 실패한 트러블 슈팅을 하였다. Mockito 라이브러리의 @Mock과 @MockBean은]]></description>
</item>
<item>
    <title>Webflux의 Hot Cold Publisher 개념</title>
    <link>http://redjen8.github.io/posts/jan2023/webflux%EC%9D%98-hot-cold-publisher-%EA%B0%9C%EB%85%90/</link>
    <pubDate>Mon, 16 Jan 2023 20:11:51 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/jan2023/webflux%EC%9D%98-hot-cold-publisher-%EA%B0%9C%EB%85%90/</guid>
    <description><![CDATA[https://www.vinsguru.com/reactor-hot-publisher-vs-cold-publisher/ Reactor에는 두 가지 Publisher 인터페이스의 구현체가 있다. Mono와 Flux. 두 구현체 모두 비동기적으로 데이터를 쏴주지만, Flux는 0~N개의 원소를, Mo]]></description>
</item>
<item>
    <title>Database Connection Storm이란?</title>
    <link>http://redjen8.github.io/posts/jan2023/database-connection-storm%EC%9D%B4%EB%9E%80/</link>
    <pubDate>Sun, 15 Jan 2023 21:39:49 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/jan2023/database-connection-storm%EC%9D%B4%EB%9E%80/</guid>
    <description><![CDATA[오라클 19 데이터베이스 개발 가이드 - 데이터베이스 어플리케이션의 커넥션 전략 개요 웹 어플리케이션에서 데이터베이스를 연결할 때에는 TCP 통신을 기반으로 한 데이터]]></description>
</item>
</channel>
</rss>
