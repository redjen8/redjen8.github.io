<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - Redjen TIL</title>
        <link>http://redjen8.github.io/posts/</link>
        <description>All Posts | Redjen TIL</description>
        <generator>Hugo -- gohugo.io</generator><language>ko-KR</language><lastBuildDate>Wed, 08 Mar 2023 19:50:38 &#43;0900</lastBuildDate><atom:link href="http://redjen8.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Javascript의 Typeof와 Instanceof</title>
    <link>http://redjen8.github.io/posts/mar2023/javascript%EC%9D%98-typeof%EC%99%80-instanceof/</link>
    <pubDate>Wed, 08 Mar 2023 19:50:38 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/mar2023/javascript%EC%9D%98-typeof%EC%99%80-instanceof/</guid>
    <description><![CDATA[자바스크립트에서 정말 선택받은 몇몇을 제외하고 모든 것은 객체이다. 그럼 익명의 객체가 어떤 타입인지 알기 위해서는 어떤 방법을 사용할 수 있을까? typeof https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/typeof typeof object 형태로]]></description>
</item>
<item>
    <title>클라이언트 사이드 - 서버 사이드 페이지네이션 비교</title>
    <link>http://redjen8.github.io/posts/mar2023/%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8-%EC%84%9C%EB%B2%84-%EC%82%AC%EC%9D%B4%EB%93%9C-%ED%8E%98%EC%9D%B4%EC%A7%80%EB%84%A4%EC%9D%B4%EC%85%98-%EB%B9%84%EA%B5%90/</link>
    <pubDate>Tue, 07 Mar 2023 18:31:12 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/mar2023/%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8-%EC%84%9C%EB%B2%84-%EC%82%AC%EC%9D%B4%EB%93%9C-%ED%8E%98%EC%9D%B4%EC%A7%80%EB%84%A4%EC%9D%B4%EC%85%98-%EB%B9%84%EA%B5%90/</guid>
    <description><![CDATA[페이지네이션을 구현하다 보면 문득 구현하는 방법에 두 가지가 있다는 것을 깨닫게 된다. 서버 사이드 페이지네이션과, 클라이언트 사이드 페이지네이션 중에서 어떤 것]]></description>
</item>
<item>
    <title>Xor Swap vs Temp Swap</title>
    <link>http://redjen8.github.io/posts/mar2023/xor-swap-vs-temp-swap/</link>
    <pubDate>Mon, 06 Mar 2023 19:52:30 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/mar2023/xor-swap-vs-temp-swap/</guid>
    <description><![CDATA[엔지니어링 과정에서 극한의 효율을 추구해야 하다보면 항상 로우 레벨이나 그 원리에까지 범위가 닿게 되는 것 같다. 각종 정렬 알고리즘에서는 원소의 위치를 서로 뒤 바꾸]]></description>
</item>
<item>
    <title>Java, Spring의 비동기 처리 위한 구현방법</title>
    <link>http://redjen8.github.io/posts/mar2023/java-spring-%EB%B9%84%EB%8F%99%EA%B8%B0-%EC%B2%98%EB%A6%AC-%EC%9C%84%ED%95%9C-%EA%B5%AC%ED%98%84%EB%B0%A9%EB%B2%95/</link>
    <pubDate>Sun, 05 Mar 2023 19:29:30 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/mar2023/java-spring-%EB%B9%84%EB%8F%99%EA%B8%B0-%EC%B2%98%EB%A6%AC-%EC%9C%84%ED%95%9C-%EA%B5%AC%ED%98%84%EB%B0%A9%EB%B2%95/</guid>
    <description><![CDATA[자바의 여러 비동기 처리를 위한 구현체들과, 그 차이점을 알아보자. Future https://stackoverflow.com/questions/38744943/listenablefuture-vs-completablefuture 자바의 Future 클래스는 JDK6부터 도압되었으며, 호출자에게 비동기 액션이 완료되면 실행할]]></description>
</item>
<item>
    <title>Java Reactive Programming - Introduction</title>
    <link>http://redjen8.github.io/posts/mar2023/java-reactive-programming-introduction/</link>
    <pubDate>Sat, 04 Mar 2023 15:23:50 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/mar2023/java-reactive-programming-introduction/</guid>
    <description><![CDATA[전통적인 쓰레드 / 요청 모델 데이터베이스에 어떤 수행하는 작업들 == 파일 IO 작업들 대부분의 어플리케이션은 이런 형태의 작업들을 주로 한다. 이 작업들은 처리하는데]]></description>
</item>
<item>
    <title>Java Observer Observable이 Deprecated된 이유</title>
    <link>http://redjen8.github.io/posts/mar2023/java-observer-observable%EC%9D%B4-deprecated%EB%90%9C-%EC%9D%B4%EC%9C%A0/</link>
    <pubDate>Fri, 03 Mar 2023 18:45:09 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/mar2023/java-observer-observable%EC%9D%B4-deprecated%EB%90%9C-%EC%9D%B4%EC%9C%A0/</guid>
    <description><![CDATA[학부 설계 패턴 수업에서는 GoF 디자인 패턴들에 대해 배웠었다. 기억에 남는 디자인 패턴에는 여러 가지가 있지만, 지금 가장 많이 사용하는 디자인 패턴이라고 한다면 아마]]></description>
</item>
<item>
    <title>Javascript Generator에 대해</title>
    <link>http://redjen8.github.io/posts/mar2023/javascript-generator%EC%97%90-%EB%8C%80%ED%95%B4/</link>
    <pubDate>Thu, 02 Mar 2023 19:42:53 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/mar2023/javascript-generator%EC%97%90-%EB%8C%80%ED%95%B4/</guid>
    <description><![CDATA[반복자 (iterator) 패턴이란 https://refactoring.guru/ko/design-patterns/iterator 어플리케이션 전체에서 어떤 도메인 모델의 순회가 일어나는 경우 코드의 중복을 줄일 수 있는 디자인 패턴 코드가 다른 데이터 구조들을 순회하길 원할]]></description>
</item>
<item>
    <title>Airflow 아키텍쳐</title>
    <link>http://redjen8.github.io/posts/mar2023/airflow-%EC%95%84%ED%82%A4%ED%85%8D%EC%B3%90/</link>
    <pubDate>Wed, 01 Mar 2023 20:42:04 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/mar2023/airflow-%EC%95%84%ED%82%A4%ED%85%8D%EC%B3%90/</guid>
    <description><![CDATA[Airflow란 Apache에서 만든 workflow를 빌드하고 실행할 수 있는 플랫폼이다. https://airflow.apache.org/docs/apache-airflow/stable/core-concepts/overview.html 각각의 workflow들은 DAG(Directed Acyclic Graph, 유향 비순환 그래프)로]]></description>
</item>
<item>
    <title>Jdk Proxy vs Cglib Proxy</title>
    <link>http://redjen8.github.io/posts/feb2023/jdk-proxy-vs-cglib-proxy/</link>
    <pubDate>Tue, 28 Feb 2023 19:02:20 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/feb2023/jdk-proxy-vs-cglib-proxy/</guid>
    <description><![CDATA[스프링 프레임워크는 AOP의 장점을 아주 잘 활용하고 있는 프레임워크이다. AOP에 의해 생성된 객체는 Aspect Contract를 실행하기 위해 사용된다. 스프링에]]></description>
</item>
<item>
    <title>Java Tuple, Reactor의 Tuples</title>
    <link>http://redjen8.github.io/posts/feb2023/java-tuple-reactor%EC%9D%98-tuples/</link>
    <pubDate>Mon, 27 Feb 2023 21:51:31 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/feb2023/java-tuple-reactor%EC%9D%98-tuples/</guid>
    <description><![CDATA[2개의 데이터를 가지는 원소를 묶어서 하나의 변수 인스턴스로 나타내고 싶을 경우가 있다. 대표적인 예시로는 2차원 상의 좌표를 나타내는 예시가 있을 것이다. 좌표를]]></description>
</item>
</channel>
</rss>
