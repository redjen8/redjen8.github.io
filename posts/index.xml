<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - Redjen TIL</title>
        <link>http://redjen8.github.io/posts/</link>
        <description>All Posts | Redjen TIL</description>
        <generator>Hugo -- gohugo.io</generator><language>ko-KR</language><lastBuildDate>Sun, 28 May 2023 21:30:00 &#43;0900</lastBuildDate><atom:link href="http://redjen8.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Markup Markdown의 차이점</title>
    <link>http://redjen8.github.io/posts/may2023/markup-markdown%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90/</link>
    <pubDate>Sun, 28 May 2023 21:30:00 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/may2023/markup-markdown%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90/</guid>
    <description><![CDATA[개발을 하면서 노션, 깃허브 등에서 흔히 사용하는 마크다운 문법이라는게 존재한다. 반면 FE 개발 시에 마크업 개발이라는 용어도 접할 수 있었다. 두 단어는 어떻게 다르]]></description>
</item>
<item>
    <title>Angular Template Syntax</title>
    <link>http://redjen8.github.io/posts/may2023/angular-template-syntax/</link>
    <pubDate>Sat, 27 May 2023 13:31:31 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/may2023/angular-template-syntax/</guid>
    <description><![CDATA[앵귤러에서는 HTML의 덩어리로써 템플릿을 사용한다. 그리고 앵귤러는 템플릿 안에서 사용할 수 있는 여러 기능들을 특별한 문법을 통해 지원한다. 이를 템플릿 문법]]></description>
</item>
<item>
    <title>Code Coverage</title>
    <link>http://redjen8.github.io/posts/may2023/code-coverage/</link>
    <pubDate>Wed, 24 May 2023 19:35:34 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/may2023/code-coverage/</guid>
    <description><![CDATA[sonarqube code coverage 관련 내용은 어떤 것인지 궁금해하다가 code coverage 개념에 대해 찾아보게 되었다. https://tecoble.techcourse.co.kr/post/2020-10-24-code-coverage/ 정의 코드 커버리지는 소프트웨어의 테스트 케이스가 얼마나 충족되었는지를 나타내]]></description>
</item>
<item>
    <title>리액티브 시스템에서의 카프카</title>
    <link>http://redjen8.github.io/posts/may2023/%EB%A6%AC%EC%95%A1%ED%8B%B0%EB%B8%8C-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%97%90%EC%84%9C%EC%9D%98-%EC%B9%B4%ED%94%84%EC%B9%B4/</link>
    <pubDate>Tue, 23 May 2023 22:07:21 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/may2023/%EB%A6%AC%EC%95%A1%ED%8B%B0%EB%B8%8C-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%97%90%EC%84%9C%EC%9D%98-%EC%B9%B4%ED%94%84%EC%B9%B4/</guid>
    <description><![CDATA[https://developer.ibm.com/articles/kafka-fit-reactive-system/ 위 아티클을 읽고 내용 정리.. 비동기 메시징 백본으로써의 카프카 다른 리액티브 애플리케이션들의 성능에 영향을 미치는 가장 중요한 기저는 통신에 있어서 비동기적]]></description>
</item>
<item>
    <title>Shadow Dom이란 무엇일까</title>
    <link>http://redjen8.github.io/posts/may2023/shadow-dom%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%BC%EA%B9%8C/</link>
    <pubDate>Mon, 22 May 2023 23:24:26 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/may2023/shadow-dom%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%BC%EA%B9%8C/</guid>
    <description><![CDATA[뷰 캡슐화를 위해 꼭 필요한 개념 중 하나인 shadow DOM은 무엇일까? https://developer.mozilla.org/ko/docs/Web/API/Web_components/Using_shadow_DOM 목적 웹 컴포넌트의 가장 중요한 측면은 캡슐화이다. 캡슐화를 통해 마크업 구조, 스타일, 동작을 숨]]></description>
</item>
<item>
    <title>Log Based vs Queue Based Message Brokers</title>
    <link>http://redjen8.github.io/posts/may2023/log-based-vs-queue-based-message-brokers/</link>
    <pubDate>Sat, 20 May 2023 16:37:10 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/may2023/log-based-vs-queue-based-message-brokers/</guid>
    <description><![CDATA[대규모의 웹 애플리케이션을 MSA로 구성하는 예시에서 이제 메시지 브로커를 빼 놓고 이야기 하기는 섭섭한 존재가 되었다. 메시지 브로커의 종류와 그에 따른 특징을 한]]></description>
</item>
<item>
    <title>Angular View Encapsulation</title>
    <link>http://redjen8.github.io/posts/may2023/angular-view-encapsulation/</link>
    <pubDate>Fri, 19 May 2023 16:05:02 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/may2023/angular-view-encapsulation/</guid>
    <description><![CDATA[앵귤러를 사용한 FE 개발을 하다가 도저히 컴포넌트에 먹인 scss 적용이 잘 되지 않아서 구글링을 열심히 했다. 그러다 나온 것이 바로 뷰 캡슐화 개념이다..! 이에 대해 알아]]></description>
</item>
<item>
    <title>Service Worker의 이해</title>
    <link>http://redjen8.github.io/posts/may2023/service-worker%EC%9D%98-%EC%9D%B4%ED%95%B4/</link>
    <pubDate>Wed, 17 May 2023 21:47:08 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/may2023/service-worker%EC%9D%98-%EC%9D%B4%ED%95%B4/</guid>
    <description><![CDATA[개요 https://developer.mozilla.org/ko/docs/Web/API/Service_Worker_API 서비스 워커는 웹 애플리케이션, 브라우저, 네트워크 사이 프록시 서버 역할을 수행한다. 서비스 워커의 개발 의도는 여러 가지가 있지만, 그 중에서도 효과적인]]></description>
</item>
<item>
    <title>Javascript Math Min Max의 동작</title>
    <link>http://redjen8.github.io/posts/may2023/javascript-math-min-max%EC%9D%98-%EB%8F%99%EC%9E%91/</link>
    <pubDate>Sun, 14 May 2023 20:54:03 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/may2023/javascript-math-min-max%EC%9D%98-%EB%8F%99%EC%9E%91/</guid>
    <description><![CDATA[자바스크립트의 내부 동작은 언뜻 보았을 때 잘 이해가 되지 않는 부분들이 많이 있는 것 같다. 오늘은 그 중 하나라고 생각되는, Math.min()과 Math.ma]]></description>
</item>
<item>
    <title>Webclient Warmup과 blocking call</title>
    <link>http://redjen8.github.io/posts/may2023/webclient-warmup%EA%B3%BC-blocking-call/</link>
    <pubDate>Fri, 12 May 2023 22:18:08 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/may2023/webclient-warmup%EA%B3%BC-blocking-call/</guid>
    <description><![CDATA[스프링을 사용해서 Http 요청을 할 때에는 이제 WebClient를 사용하는 것이 거의 표준이 되었다. 그런데, Spring Webflux 기반의 어플리케이션에서 WebClient를]]></description>
</item>
</channel>
</rss>
