<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Redjen TIL</title>
        <link>http://redjen8.github.io/</link>
        <description>Redjen TIL 왜? 모음집</description>
        <generator>Hugo -- gohugo.io</generator><language>ko-KR</language><lastBuildDate>Tue, 21 Feb 2023 19:56:04 &#43;0900</lastBuildDate>
            <atom:link href="http://redjen8.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>스프링 리액티브 트랜잭션</title>
    <link>http://redjen8.github.io/posts/feb2023/%EC%8A%A4%ED%94%84%EB%A7%81-%EB%A6%AC%EC%95%A1%ED%8B%B0%EB%B8%8C-%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98/</link>
    <pubDate>Tue, 21 Feb 2023 19:56:04 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/feb2023/%EC%8A%A4%ED%94%84%EB%A7%81-%EB%A6%AC%EC%95%A1%ED%8B%B0%EB%B8%8C-%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98/</guid>
    <description><![CDATA[리액티브 컨텍스트 안에서 트랜잭션은 어떻게 이루어질까? https://spring.io/blog/2019/05/16/reactive-transactions-with-spring 선언적 트랜잭션 관리는 어떻게 이루어지나 트랜잭션 관리는 트랜잭션의 상태를 실행과 연관지어야 한다.]]></description>
</item>
<item>
    <title>상태 관리란</title>
    <link>http://redjen8.github.io/posts/feb2023/%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC%EB%9E%80/</link>
    <pubDate>Mon, 20 Feb 2023 22:29:59 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/feb2023/%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC%EB%9E%80/</guid>
    <description><![CDATA[클라이언트 개발을 하다 보면 상태 관리, 혹은 상태 관리 툴들에 대해 언급 되는 경우가 많이 있었다. 상태관리란 무엇이고, 왜 해야 할까? https://dev.to/abdurrkhalid333/what-is-state-management-and-why-you-should-learn-it-3kai 상태란 상태는 어플리케이션]]></description>
</item>
<item>
    <title>Mvvm 패턴이란</title>
    <link>http://redjen8.github.io/posts/feb2023/mvvm-%ED%8C%A8%ED%84%B4%EC%9D%B4%EB%9E%80/</link>
    <pubDate>Sun, 19 Feb 2023 12:02:43 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/feb2023/mvvm-%ED%8C%A8%ED%84%B4%EC%9D%B4%EB%9E%80/</guid>
    <description><![CDATA[서버 개발의 유구한 역사 속에서는 MVC 패턴을 많이 사용한다. Model - View - Controller로 나누어진 MVC 구조는 사실 불편한 면이 없는 것은 아니지만 그럭저럭 기능들]]></description>
</item>
<item>
    <title>Java Reflection Api에 대해</title>
    <link>http://redjen8.github.io/posts/feb2023/java-reflection-api%EC%97%90-%EB%8C%80%ED%95%B4/</link>
    <pubDate>Sat, 18 Feb 2023 23:17:26 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/feb2023/java-reflection-api%EC%97%90-%EB%8C%80%ED%95%B4/</guid>
    <description><![CDATA[Java의 Reflection API는 무엇이고, 어떻게 사용되고 있을까? https://www.baeldung.com/java-reflection Reflection API 리플렉션을 사용하기 위해서는 별도의 jar 파일이나 의존성이 필요하지 않다. java.lang.reflect 패키지에 이미 번들]]></description>
</item>
<item>
    <title>Marble Diagram에 대해</title>
    <link>http://redjen8.github.io/posts/feb2023/marble-diagram%EC%97%90-%EB%8C%80%ED%95%B4/</link>
    <pubDate>Fri, 17 Feb 2023 20:18:22 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/feb2023/marble-diagram%EC%97%90-%EB%8C%80%ED%95%B4/</guid>
    <description><![CDATA[Reactive Stream 공식 문서에 자주 나오는 구슬 같이 생긴 친구들의 정체는 뭘까? https://www.oreilly.com/library/view/reactive-programming-for/9781785882883/ch03s02.html Marble Diagram ReactiveX 프로젝트는 Observable한 스트림을 통한 비동기적 프로그래밍 API이다. 그]]></description>
</item>
<item>
    <title>Java Generic 트러블슈팅</title>
    <link>http://redjen8.github.io/posts/feb2023/java-generic-%ED%8A%B8%EB%9F%AC%EB%B8%94%EC%8A%88%ED%8C%85/</link>
    <pubDate>Thu, 16 Feb 2023 19:10:28 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/feb2023/java-generic-%ED%8A%B8%EB%9F%AC%EB%B8%94%EC%8A%88%ED%8C%85/</guid>
    <description><![CDATA[약간 헷갈리던 개념이었는데, 이번 기회에 트러블 슈팅을 하면서 제대로 정리를 하고 간다..! 다음 질문으로부터 파생되었던 개념이었다. 왜 자바 컬렉션 내의 특정 객]]></description>
</item>
<item>
    <title>앵귤러 라이프사이클 훅</title>
    <link>http://redjen8.github.io/posts/feb2023/%EC%95%B5%EA%B7%A4%EB%9F%AC-%EB%9D%BC%EC%9D%B4%ED%94%84%EC%82%AC%EC%9D%B4%ED%81%B4-%ED%9B%85/</link>
    <pubDate>Wed, 15 Feb 2023 16:18:30 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/feb2023/%EC%95%B5%EA%B7%A4%EB%9F%AC-%EB%9D%BC%EC%9D%B4%ED%94%84%EC%82%AC%EC%9D%B4%ED%81%B4-%ED%9B%85/</guid>
    <description><![CDATA[내내 백엔드 개발을 하던 입장에서, 프레임워크를 사용해서 간단한 페이지를 담고 데이터의 상태관리를 하는 방식의 프론트 개발이 너무 낯설고 배워야 할 점이 많았다. 앵]]></description>
</item>
<item>
    <title>Gradle Dependency 관리</title>
    <link>http://redjen8.github.io/posts/feb2023/gradle-dependency-%EA%B4%80%EB%A6%AC/</link>
    <pubDate>Tue, 14 Feb 2023 19:37:20 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/feb2023/gradle-dependency-%EA%B4%80%EB%A6%AC/</guid>
    <description><![CDATA[gradle은 무엇인가? https://docs.gradle.org/current/userguide/what_is_gradle.html gradle은 거의 모든 소프트웨어에 적용할 수 있을 정도로 유연한 오픈소스 빌드 자동화 툴이다. maven과 비교하여 조금 더 간단]]></description>
</item>
<item>
    <title>Polyfill이란</title>
    <link>http://redjen8.github.io/posts/feb2023/polyfill%EC%9D%B4%EB%9E%80/</link>
    <pubDate>Mon, 13 Feb 2023 19:39:59 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/feb2023/polyfill%EC%9D%B4%EB%9E%80/</guid>
    <description><![CDATA[자바스크립트 = 언어 명세이고, 자바스크립트 구현체는 각 브라우저 엔진에 따라 완전히 똑같은 동작을 보장해주지는 않는다. 그렇다면, 브라우저 위에서 동작하는 자]]></description>
</item>
<item>
    <title>Connection Timeout과 Read Timeout의 차이</title>
    <link>http://redjen8.github.io/posts/feb2023/connection-timeout%EA%B3%BC-read-timeout%EC%9D%98-%EC%B0%A8%EC%9D%B4/</link>
    <pubDate>Sun, 12 Feb 2023 20:58:31 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/feb2023/connection-timeout%EA%B3%BC-read-timeout%EC%9D%98-%EC%B0%A8%EC%9D%B4/</guid>
    <description><![CDATA[Connection Timeout 과 Read Timeout은 서비스 설계에 가장 기초적이면서도, 큰 영향을 줄 수 있는 인프라 레벨의 설정 값들이다. 기본적으로 가장 앞단 서버 또는 로드 밸런서에 적용]]></description>
</item>
</channel>
</rss>
