<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Redjen TIL</title>
        <link>http://redjen8.github.io/</link>
        <description>Redjen TIL 왜? 모음집</description>
        <generator>Hugo -- gohugo.io</generator><language>ko-KR</language><lastBuildDate>Wed, 22 Mar 2023 20:58:51 &#43;0900</lastBuildDate>
            <atom:link href="http://redjen8.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>ECMAScript Module과 Import</title>
    <link>http://redjen8.github.io/posts/mar2023/ecmascript-module%EA%B3%BC-import/</link>
    <pubDate>Wed, 22 Mar 2023 20:58:51 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/mar2023/ecmascript-module%EA%B3%BC-import/</guid>
    <description><![CDATA[자바스크립트로 웹 페이지를 만들던, node.js 어플리케이션을 만들던 사용하게 되는 자바스크립트의 기능으로는 import가 있다. 모든 코드는 한 군데에 작성하는 것보]]></description>
</item>
<item>
    <title>Copy and Paste</title>
    <link>http://redjen8.github.io/posts/mar2023/copy-and-paste/</link>
    <pubDate>Tue, 21 Mar 2023 20:11:08 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/mar2023/copy-and-paste/</guid>
    <description><![CDATA[우리가 컴퓨터를 다룰 때 가장 많이 사용하는 유틸리티는 무엇일까? 사내 메신저도, 인터넷 브라우저도 아닌 바로 클립보드라고 생각한다. Copy and Paste는 OS 레벨에]]></description>
</item>
<item>
    <title>Sharding vs Replication</title>
    <link>http://redjen8.github.io/posts/mar2023/sharding-vs-replication/</link>
    <pubDate>Mon, 20 Mar 2023 22:06:30 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/mar2023/sharding-vs-replication/</guid>
    <description><![CDATA[MongoDB에서 sharding과 replication은 어떻게 다를까? 데이터를 뭔가 여러 곳에 저장하는 것 같긴 한데.. 구체적으로 어떻게 다른지 알]]></description>
</item>
<item>
    <title>Caching in Spring</title>
    <link>http://redjen8.github.io/posts/mar2023/caching-in-spring/</link>
    <pubDate>Sun, 19 Mar 2023 22:09:32 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/mar2023/caching-in-spring/</guid>
    <description><![CDATA[스프링 프레임워크에서의 캐시 추상화는 어떤 방식으로 동작할까? https://www.baeldung.com/spring-cache-tutorial 어노테이션 기반 캐싱 @Cacheable 캐싱을 활성화하기 위한 방법으로는 @Cacheable 어노테이션으로 감싸는 것이다. 이]]></description>
</item>
<item>
    <title>Mongodb Index Strategy</title>
    <link>http://redjen8.github.io/posts/mar2023/mongodb-index-strategy/</link>
    <pubDate>Sat, 18 Mar 2023 22:22:04 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/mar2023/mongodb-index-strategy/</guid>
    <description><![CDATA[MongoDB에 저장되는 다큐먼트 데이터들에는 반드시 인덱스를 한 개 이상 사용하는 것이 성능 향상적 측면에서 권장된다. 그렇다면 인덱스는 언제, 어떻게, 무엇]]></description>
</item>
<item>
    <title>Static Class vs Singleton</title>
    <link>http://redjen8.github.io/posts/mar2023/static-class-vs-singleton/</link>
    <pubDate>Fri, 17 Mar 2023 18:17:41 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/mar2023/static-class-vs-singleton/</guid>
    <description><![CDATA[가끔 개발을 하다 보면 싱글턴 패턴과 정적 클래스가 헷갈릴 때가 있다. 두 방식 모두 하나의 객체를 다루는 것 같은데, 구체적으로는 어떻게 다를까? https://stackoverflow.com/questions/519520/difference-between-static-class-and-singleton-pattern thread safe? 싱글턴 패턴과]]></description>
</item>
<item>
    <title>Http Preflight Request</title>
    <link>http://redjen8.github.io/posts/mar2023/http-preflight-request/</link>
    <pubDate>Thu, 16 Mar 2023 23:02:59 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/mar2023/http-preflight-request/</guid>
    <description><![CDATA[HTTP Preflight Request란 무엇이고, 어떤 내용을 포함하고 있을까? https://developer.mozilla.org/ko/docs/Glossary/Preflight_request Preflight Request란 본격적인 HTTP 요청 전 서버 쪽에서 그 요청에 대한 메서드와 헤더에 대해 capa]]></description>
</item>
<item>
    <title>Nodejs Quick Review</title>
    <link>http://redjen8.github.io/posts/mar2023/nodejs-quick-review/</link>
    <pubDate>Wed, 15 Mar 2023 23:45:28 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/mar2023/nodejs-quick-review/</guid>
    <description><![CDATA[Js 스터디 도중 Node.js에 대한 이야기가 여러 번 언급되어 공식 문서를 정리하고자 한다. https://nodejs.org/en/docs/guides/dont-block-the-event-loop/ 요약 Node.js는 자바스크립트 코드를 이벤트 루프 안에서 실행]]></description>
</item>
<item>
    <title>Webclient에서의 Retry</title>
    <link>http://redjen8.github.io/posts/mar2023/webclient%EC%97%90%EC%84%9C%EC%9D%98-retry/</link>
    <pubDate>Tue, 14 Mar 2023 21:09:22 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/mar2023/webclient%EC%97%90%EC%84%9C%EC%9D%98-retry/</guid>
    <description><![CDATA[webclient를 사용하면 다른 서버로의 웹 요청에 대한 응답을 비동기적으로 수행할 수 있다. 그런데, 요청이 실패하면 어떻게 될까? 실패했을 때의 요청에 대해]]></description>
</item>
<item>
    <title>Webclient Exchange vs Retrieve</title>
    <link>http://redjen8.github.io/posts/mar2023/webclient-exchange-vs-retrieve/</link>
    <pubDate>Mon, 13 Mar 2023 19:29:51 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/mar2023/webclient-exchange-vs-retrieve/</guid>
    <description><![CDATA[WebClient를 사용해서 HTTP 요청을 리액티브 스트림 방식으로 받는 로직이 이제는 더 이상 이상하지 않다. 그런데 WebClient에는 요청에 대한 응답을 받]]></description>
</item>
</channel>
</rss>
