<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Redjen TIL</title>
        <link>http://redjen8.github.io/</link>
        <description>Make Maketh Install</description>
        <generator>Hugo -- gohugo.io</generator><language>ko-KR</language><lastBuildDate>Thu, 09 Nov 2023 19:19:15 &#43;0900</lastBuildDate>
            <atom:link href="http://redjen8.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>모던 자바스크립트 Deep Dive 40장 - 이벤트</title>
    <link>http://redjen8.github.io/posts/js-deepdive/event/</link>
    <pubDate>Thu, 09 Nov 2023 19:19:15 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/js-deepdive/event/</guid>
    <description><![CDATA[이벤트 드리븐 프로그래밍 사용자와의 상호작용을 더 풍부하게 하기 위해 브라우저는 다음의 시퀀스를 지원 처리할 사건이 발생했음을 인지 특정 타입의 이벤트 발생 특정 타]]></description>
</item>
<item>
    <title>모던 자바스크립트 Deep Dive 32장 - 문자열 객체</title>
    <link>http://redjen8.github.io/posts/js-deepdive/string/</link>
    <pubDate>Thu, 26 Oct 2023 19:19:05 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/js-deepdive/string/</guid>
    <description><![CDATA[생성자 함수를 통한 문자열 객체 생성 const strObj = new String(); console.log(strObj); // String {length: 0, [[primitiveValue]]: &#34;&#34;} [[primitiveValue]] : [[StringData]] 내부 슬롯에 접근할 수 있는 프로퍼티 (es5) const strObj = new String(&#39;Lee&#39;); console.log(strObj); // String {0: &#34;L&#34;, 1: &#34;e&#34;, 2: &#34;e&#34;, length: 3, [[primitiveValue]]: &#34;Lee&#34;} String 객체는 각 문]]></description>
</item>
<item>
    <title>모던 자바스크립트 Deep Dive 23장 - 실행 컨텍스트</title>
    <link>http://redjen8.github.io/posts/js-deepdive/execution-context/</link>
    <pubDate>Mon, 04 Sep 2023 23:26:52 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/js-deepdive/execution-context/</guid>
    <description><![CDATA[소스코드의 타입 전역 코드 (global code): 전역에 존재하는 소스코드. 전역에 정의된 함수, 클래스의 내부 코드는 포함 X 전역 코드는 전역 변수를 관리하기 위해 최상위 전역 스코프]]></description>
</item>
<item>
    <title>모던 자바스크립트 Deep Dive 17장 - 생성자 함수에 의한 객체 생성</title>
    <link>http://redjen8.github.io/posts/js-deepdive/object-constructor-function/</link>
    <pubDate>Tue, 22 Aug 2023 22:24:08 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/js-deepdive/object-constructor-function/</guid>
    <description><![CDATA[Object 생성자 함수 new 연산자 + Object 생성자 함수 호출 -&gt; 빈 객체 생성해서 반환 JS는 String, Number, Boolean, Function, Array, Date, RegExp, Promise 등의 빌트인 생성자 함수 제공 객체 리터럴을 사용하는 것이 더 간편해서 별]]></description>
</item>
<item>
    <title>모던 자바스크립트 Deep Dive 7장 - 연산자</title>
    <link>http://redjen8.github.io/posts/js-deepdive/operator/</link>
    <pubDate>Wed, 09 Aug 2023 21:49:55 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/js-deepdive/operator/</guid>
    <description><![CDATA[연산자의 정의 하나 이상의 표현식을 대상으로 연산을 수행해 하나의 값을 만드는 표현식 피연산자는 연산의 대상 -&gt; 값으로 평가 가능해야 결국 연산자는 피연산자에 대한 동]]></description>
</item>
<item>
    <title>커링의 개념과 이해</title>
    <link>http://redjen8.github.io/posts/jun2023/%EC%BB%A4%EB%A7%81%EC%9D%98-%EA%B0%9C%EB%85%90%EA%B3%BC-%EC%9D%B4%ED%95%B4/</link>
    <pubDate>Wed, 12 Jul 2023 21:54:33 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/jun2023/%EC%BB%A4%EB%A7%81%EC%9D%98-%EA%B0%9C%EB%85%90%EA%B3%BC-%EC%9D%B4%ED%95%B4/</guid>
    <description><![CDATA[https://towardsdatascience.com/what-is-currying-in-programming-56fd57103431 이름의 유래 당연하게도 카레나 농구 선수로부터 이름을 딴 것은 아니고, 전설적인 수학자 Haskell Curry의 이름을 따서 지어졌다. Haskell? 했다면 맞다.. 프로그래밍 언어]]></description>
</item>
<item>
    <title>Rxjs를 소개합니다</title>
    <link>http://redjen8.github.io/posts/jun2023/rxjs%EB%A5%BC-%EC%86%8C%EA%B0%9C%ED%95%A9%EB%8B%88%EB%8B%A4/</link>
    <pubDate>Mon, 12 Jun 2023 22:07:17 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/jun2023/rxjs%EB%A5%BC-%EC%86%8C%EA%B0%9C%ED%95%A9%EB%8B%88%EB%8B%A4/</guid>
    <description><![CDATA[Reactive Streams와 ReactiveX에 대해 ReactiveX의 공식문서에서는 Observable한 시퀀스를 사용해 비동기적인, 이벤트 기반의 프로]]></description>
</item>
<item>
    <title>Mongodb Aggregation 최적화</title>
    <link>http://redjen8.github.io/posts/jun2023/mongodb-aggregation-%EC%B5%9C%EC%A0%81%ED%99%94/</link>
    <pubDate>Fri, 09 Jun 2023 11:22:37 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/jun2023/mongodb-aggregation-%EC%B5%9C%EC%A0%81%ED%99%94/</guid>
    <description><![CDATA[mongodb aggregation을 사용하다 보면 최적화에 대한 고민을 하지 않을 수 없다. 공식 문서에서는 어떤 방식으로 최적화를 안내하고 있을까? https://www.mongodb.com/docs/manual/core/aggregation-pipeline-optimization/ 실행 엔진에서의 최]]></description>
</item>
<item>
    <title>React Empty Fragments</title>
    <link>http://redjen8.github.io/posts/jun2023/react-empty-fragments/</link>
    <pubDate>Wed, 07 Jun 2023 23:44:02 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/jun2023/react-empty-fragments/</guid>
    <description><![CDATA[다른 분의 리액트를 코드를 보던 중 &lt;&gt;, &lt;/&gt;와 같은 코드 조각이 있어 저건 뭐지? 하고 찾아보게 되었다. https://medium.com/fasal-engineering/what-are-react-fragments-or-the-react-empty-tags-190253582905 React Fragment 리액트 컴포넌트를 작성하는 동안에는 컴포]]></description>
</item>
<item>
    <title>z-index가 동작하지 않는 경우</title>
    <link>http://redjen8.github.io/posts/jun2023/z-index%EA%B0%80-%EB%8F%99%EC%9E%91%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94-%EA%B2%BD%EC%9A%B0/</link>
    <pubDate>Sat, 03 Jun 2023 23:15:15 &#43;0900</pubDate>
    <author>redjen</author>
    <guid>http://redjen8.github.io/posts/jun2023/z-index%EA%B0%80-%EB%8F%99%EC%9E%91%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94-%EA%B2%BD%EC%9A%B0/</guid>
    <description><![CDATA[popover 등의 컴포넌트를 개발하다 보면 특정 html 엘리먼트를 다른 엘리먼트 위에 표시하고 싶을 때가 있다. 그럴 때 간편하게 사용할 수 있는 것이 css의 z-index 속성이다. z-index https://developer.mozilla.org/ko/docs/Web/CSS/z-index z-]]></description>
</item>
</channel>
</rss>
